# swagger and health in production as well
quarkus.swagger-ui.always-include=true
quarkus.smallrye-health.ui.always-include=true

# Use JIB to build container image teedjay/quarkus-kafka-reactive:latest
quarkus.container-image.build = false
quarkus.container-image.push = false
quarkus.container-image.group = teedjay
quarkus.container-image.additional-tags = latest
quarkus.jib.base-jvm-image=adoptopenjdk/openjdk15:centos-jre

# Configure the SmallRye Kafka connector
kafka.bootstrap.servers=localhost:9092
quarkus.kafka.health.enabled=true
quarkus.reactive-messaging.health.enabled=true
quarkus.reactive-messaging.metrics.enabled=true

# Generator Kafka sink (we write to it using MessageGenerator)
mp.messaging.outgoing.generator.connector=smallrye-kafka
mp.messaging.outgoing.generator.topic=test-input
mp.messaging.outgoing.generator.value.serializer=org.apache.kafka.common.serialization.StringSerializer

# Configure Kafka sink (we write to it using MessagePusher)
mp.messaging.outgoing.pusher.connector=smallrye-kafka
mp.messaging.outgoing.pusher.topic=test-input
mp.messaging.outgoing.pusher.value.serializer=org.apache.kafka.common.serialization.StringSerializer

# Configure the Kafka processor (we read, process and write)
mp.messaging.incoming.test-input.connector=smallrye-kafka
mp.messaging.incoming.test-input.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer

mp.messaging.outgoing.test-output.connector=smallrye-kafka
mp.messaging.outgoing.test-output.value.serializer=org.apache.kafka.common.serialization.StringSerializer

# Configure the Kafka souce (we read and output to SSE)
mp.messaging.incoming.stream.connector=smallrye-kafka
mp.messaging.incoming.stream.topic=test-input
mp.messaging.incoming.stream.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer
